# Defining database schemas here

# Import libraries
from datetime import datetime
from main import db, app, login_manager
from itsdangerous.url_safe import URLSafeTimedSerializer as Serializer


@login_manager.user_loader
def load_user(user_id):
    return Boss.query.get(int(user_id))



''' Worker Primary is a kind of reference table that hold worker_id and worker_name. The variables
    present in this class is used as foreign key in most of the table.'''
class WorkerPrimary(db.Model):
    __tablename__ = "WorkerPrimary"                                                                 # Name of the table
    worker_id = db.Column(db.String(6), unique = True, primary_key = True, nullable = False)        # Worker ID is autogenerated 6 digit string
    worker_name = db.Column(db.String(35), unique = False, primary_key = False, nullable = False)   # Name of the worker




''' Worker Detail contains all the details of the worker. This table uses multiple foreign keys from multiple tables.'''
class WorkerDetail(db.Model):
    __tablename__ = "WorkerDetail"                                                                 # Name of the table
    worker_id = db.Column(db.String(6), db.ForeignKey("WorkerPrimary.worker_id"), primary_key = True, nullable = False)  # Worker ID is a foreign key from Worker Primary table
    worker_name = db.Column(db.String(35), db.ForeignKey("WorkerPrimary.worker_name"), nullable = False)      # Worker name is a foreign key from Worker Primary table
    worker_phone_number = db.Column(db.Integer, nullable = False, unique = True)              # Worker's phone number
    worker_address = db.Column(db.String(50), nullable = False, unique = False)               # Worker's address
    worker_gender = db.Column(db.String(1), nullable = False, unique = False)                 # Worker's gender, can be F (female), M (male) or O (other)
    worker_aadhar_number = db.Column(db.Integer, nullable = False, unique = True)             # Worker's aadhar card number
    # Bank Details for the worker for making a payment                                        
    worker_account_number = db.Column(db.Integer, nullable = False, unique = False)           # Worker's account number
    worker_ifsc_code = db.Column(db.String(12), nullable = False, unique = False)             # Worker's IFSC code
    worker_bank_name = db.Column(db.String(35), nullable = False, unique = True)              # Worker's Bank Name
    worker_bank_branch_name = db.Column(db.String(40), nullable = False, unique = True)       # Worker's Bank Branch Name
    # Bank Details ended
    worker_join_date = db.Column(db.DateTime, nullable = False, default = datetime.utcnow, unique = False) # Date of joining
    worker_salary = db.Column(db.Integer, nullable = False, unique = False)                   # Per day salary of the worker
    supervisor_id = db.Column(db.String(35), db.ForeignKey("SupervisorDetails.supervisor_id"), nullable = False, unique = False) # ID of the supervisor they work under
    site_id = db.Column(db.String(6), db.ForeignKey("SiteData.site_id"), nullable = False, unique = False) # Site ID where the worker is working
    still_working = db.Column(db.String(1), nullable = False, unique = False)                 # Still working can be Y (yes), N (no) or L (on leave)



''' Worker Today Attendance contains attendance of only today. It gets reset at after 3 AM everyday. It's data is transfered into 
    Worker Attendance table after every 24 hours.'''
class WorkerTodayAttendance(db.Model):
    __tablename__ = "WorkerTodayAttendance"                                                   # Name of the table
    worker_id = db.Column(db.String(6), db.ForeignKey("WorkerPrimary.worker_id"), primary_key = True, nullable = False)  # Worker ID is a foreign key from Worker Primary table
    attendance_status = db.Column(db.String(1), nullable = False, unique = False)  # Attendance status can be P (Present), A (Absent), or H (Half time)
    attendance_date = db.Column(db.DateTime, nullable = False, default = datetime.utcnow, unique = False)  # Date of the attendance
    did_overtime = db.Column(db.String(1), nullable = False, unique = False)                  # Did Overtime can be Y (Yes) or N (No)
    overtime_today = db.Column(db.Integer, nullable = True, unique = False)                   # Overtime Today store an integer value which is the number of hours a worker has worked. It can be roundoff to ciel value.



''' Worker Attendance contains overall attendance of the workers from each and every site.'''
class WorkerAttendance(db.Model):
    __tablename__ = "WorkerAttendance"                                                        # Name of the table
    row_id = db.Column(db.String(6), primary_key = True, nullable = False)                    # Row ID works as a primary key as Worker ID is repeated after every day and hence can be used as a primary key.
    worker_id = db.Column(db.String(6), db.ForeignKey("WorkerPrimary.worker_id"), nullable = False) # Worker ID is a foreign key from Worker Primary table
    attendance_date = db.Column(db.Integer, nullable = False, unique = False)                 # Date of the attendance
    attendance_month = db.Column(db.Integer, nullable = False, unique = False)                # Month of the attendance
    attendance_year = db.Column(db.Integer, nullable = False, unique = False)                 # Year of the attendance
    overtime_hours = db.Column(db.Integer, nullable = False, default = int("0"), unique = False)   # Overtime hours of the worker. If no overtime hours set it as zero.
    attendance_status = db.Column(db.String(1), nullable = False, unique = False)             # Attendance status can be P (Present), A (Absent), or H (Half time)



#################################### Have to check
class WorkerSalary(db.Model):
    __tablename__ = "WorkerSalary"
    row_id = db.Column(db.String(6), primary_key = True, nullable = True, unique = True)
    worker_id = db.Column(db.String(6), db.ForeignKey("WorkerPrimary.worker_id"), nullable = False)
    month_year = db.Column(db.String(7), nullable = False, unique = False)
    monthly_salary = db.Column(db.Integer, nullable = False, unique = False)
    overtime_salary = db.Column(db.Integer, nullable = False, unique = False)
    total_salary = db.Column(db.Integer, nullable = False, unique = False)
    advance_salary = db.Column(db.Integer, nullable = True, unique = False)
    

class LocationData(db.Model):
    __tablename__ = "LocationData"
    location_id = db.Column(db.String(6), unique = True, primary_key = True, nullable = False)
    location_name = db.Column(db.String(30), nullable = False, unique = False)
    location_state = db.Column(db.String(30), nullable = False, unique = False)
    location_project_number = db.Column(db.Integer, nullable = False, unique = False)

class SiteData(db.Model):
    __tablename__ = "SiteData"
    site_id = db.Column(db.String(6), unique = True, primary_key = True, nullable = False)
    site_name = db.Column(db.String(30), nullable = False, unique = True)
    location_id = db.Column(db.String(6), db.ForeignKey("LocationData.location_id"), nullable = False, unique = True)
    site_pincode = db.Column(db.Integer, nullable = False, unique = False)
    site_project_number = db.Column(db.Integer, nullable = False, unique = False)

class ProjectData(db.Model):
    __tablename__ = "ProjectData"
    project_id = db.Column(db.String(6), unique = True, primary_key = True, nullable = False)
    project_name = db.Column(db.String(30), nullable = False, unique = False)
    site_id = db.Column(db.String(6), db.ForeignKey("SiteData.site_id"), nullable = False, unique = True)
    location_id = db.Column(db.String(6), db.ForeignKey("LocationData.location_id"), nullable = False, unique = True)
    site_eng_id = db.Column(db.String(6), db.ForeignKey("SiteEngineerDetails.site_eng_id"), nullable = False, unique = True)
    supervisor_id = db.Column(db.String(6), db.ForeignKey("SupervisorDetails.supervisor_id"), nullable = False, unique = True)
    total_workers = db.Column(db.Integer, nullable = False, unique = False)

class SiteEngineerDetails(db.Model):
    __tablename__ = "SiteEngineerDetails"
    site_eng_id = db.Column(db.String(6), unique = True, primary_key = True, nullable = False)
    site_eng_name = db.Column(db.String(30), nullable = False, unique = False)
    site_eng_phone = db.Column(db.Integer, nullable = False, unique = True)
    location_id = db.Column(db.String(6), db.ForeignKey("LocationData.location_id"), nullable = False, unique = True)
    site_id = db.Column(db.String(6), db.ForeignKey("SiteData.site_id"), nullable = False, unique = True)
    project_id = db.Column(db.String(6), db.ForeignKey("ProjectData.project_id"), nullable = False, unique = True)
    site_eng_email = db.Column(db.String(40), nullable = False, unique = True)
    site_eng_password = db.Column(db.String(20), nullable = False, unique = False)

class SupervisorDetails(db.Model):
    __tablename__ = "SupervisorDetails"
    supervisor_id = db.Column(db.String(6), unique = True, primary_key = True, nullable = False)
    supervisor_name = db.Column(db.String(30), nullable = False, unique = False)
    supervisor_phone = db.Column(db.Integer, nullable = False, unique = True)
    location_id = db.Column(db.String(6), db.ForeignKey("LocationData.location_id"), nullable = False, unique = True)
    site_id = db.Column(db.String(6), db.ForeignKey("SiteData.site_id"), nullable = False, unique = True)
    project_id = db.Column(db.String(6), db.ForeignKey("ProjectData.project_id"), nullable = False, unique = True)
    supervisor_email = db.Column(db.String(40), nullable = False, unique = True)
    supervisor_password = db.Column(db.String(20), nullable = False, unique = False)
    site_eng_id = db.Column(db.String(6), db.ForeignKey("SiteEngineerDetails.site_eng_id"), nullable = False, unique = True)

class Boss(db.Model):
    __tablename__ = "Boss"
    boss_id = db.Column(db.String(6), unique = True, primary_key = True, nullable = False)
    boss_name = db.Column(db.String(30), nullable = False, unique = False)
    boss_email = db.Column(db.String(40), nullable = False, unique = True)
    boss_password = db.Column(db.String(20), nullable = False, unique = False)
